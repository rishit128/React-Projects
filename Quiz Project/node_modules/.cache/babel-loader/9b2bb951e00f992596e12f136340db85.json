{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Projects\\\\react-projects-master\\\\23-quiz\\\\final\\\\src\\\\context.js\";\nimport axios from 'axios';\nimport React, { useState, useContext, useEffect } from 'react';\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24\n};\nconst API_ENDPOINT = 'https://opentdb.com/api.php?';\nconst url = '';\nconst tempUrl = 'https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: 'sports',\n    difficulty: 'easy'\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const fetchQuestions = async url => {\n    setLoading(true);\n    setWaiting(false);\n    const response = await axios(url).catch(err => console.log(err));\n\n    if (response) {\n      const data = response.data.results;\n\n      if (data.length > 0) {\n        setQuestions(data);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  };\n\n  const nextQuestion = () => {\n    setIndex(oldIndex => {\n      const index = oldIndex + 1;\n\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n\n  const checkAnswer = value => {\n    if (value) {\n      setCorrect(oldState => oldState + 1);\n    }\n\n    nextQuestion();\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setWaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({ ...quiz,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      amount,\n      category,\n      difficulty\n    } = quiz;\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`;\n    fetchQuestions(url);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      waiting,\n      loading,\n      questions,\n      index,\n      correct,\n      error,\n      isModalOpen,\n      nextQuestion,\n      checkAnswer,\n      closeModal,\n      quiz,\n      handleChange,\n      handleSubmit\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, children);\n}; // make sure use\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["E:/React Projects/react-projects-master/23-quiz/final/src/context.js"],"names":["axios","React","useState","useContext","useEffect","table","sports","history","politics","API_ENDPOINT","url","tempUrl","AppContext","createContext","AppProvider","children","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","quiz","setQuiz","amount","category","difficulty","isModalOpen","setIsModalOpen","fetchQuestions","response","catch","err","console","log","data","results","length","nextQuestion","oldIndex","openModal","checkAnswer","value","oldState","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,EADI;AAEZC,EAAAA,OAAO,EAAE,EAFG;AAGZC,EAAAA,QAAQ,EAAE;AAHE,CAAd;AAMA,MAAMC,YAAY,GAAG,8BAArB;AAEA,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,OAAO,GACX,iFADF;AAEA,MAAMC,UAAU,GAAGX,KAAK,CAACY,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC;AAC/B4B,IAAAA,MAAM,EAAE,EADuB;AAE/BC,IAAAA,QAAQ,EAAE,QAFqB;AAG/BC,IAAAA,UAAU,EAAE;AAHmB,GAAD,CAAhC;AAKA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChC,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMiC,cAAc,GAAG,MAAOzB,GAAP,IAAe;AACpCS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,UAAMmB,QAAQ,GAAG,MAAMpC,KAAK,CAACU,GAAD,CAAL,CAAW2B,KAAX,CAAkBC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAA1B,CAAvB;;AACA,QAAIF,QAAJ,EAAc;AACZ,YAAMK,IAAI,GAAGL,QAAQ,CAACK,IAAT,CAAcC,OAA3B;;AACA,UAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBtB,QAAAA,YAAY,CAACoB,IAAD,CAAZ;AACAtB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAU,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,OALD,MAKO;AACLV,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,KAXD,MAWO;AACLV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAlBD;;AAoBA,QAAM2B,YAAY,GAAG,MAAM;AACzBrB,IAAAA,QAAQ,CAAEsB,QAAD,IAAc;AACrB,YAAMvB,KAAK,GAAGuB,QAAQ,GAAG,CAAzB;;AACA,UAAIvB,KAAK,GAAGF,SAAS,CAACuB,MAAV,GAAmB,CAA/B,EAAkC;AAChCG,QAAAA,SAAS;AACT,eAAO,CAAP;AACD,OAHD,MAGO;AACL,eAAOxB,KAAP;AACD;AACF,KARO,CAAR;AASD,GAVD;;AAWA,QAAMyB,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAIA,KAAJ,EAAW;AACTvB,MAAAA,UAAU,CAAEwB,QAAD,IAAcA,QAAQ,GAAG,CAA1B,CAAV;AACD;;AACDL,IAAAA,YAAY;AACb,GALD;;AAOA,QAAME,SAAS,GAAG,MAAM;AACtBZ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAGA,QAAMgB,UAAU,GAAG,MAAM;AACvBjC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAS,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAJD;;AAKA,QAAMiB,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,UAAML,KAAK,GAAGI,CAAC,CAACE,MAAF,CAASN,KAAvB;AACAnB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACyB,IAAD,GAAQL;AAAnB,KAAD,CAAP;AACD,GAJD;;AAKA,QAAMO,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAM;AAAE1B,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,QAAmCJ,IAAzC;AAEA,UAAMlB,GAAG,GAAI,GAAED,YAAa,UAASqB,MAAO,eAAcE,UAAW,aAAY3B,KAAK,CAAC0B,QAAD,CAAW,gBAAjG;AACAI,IAAAA,cAAc,CAACzB,GAAD,CAAd;AACD,GAND;;AAQA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,OADK;AAELE,MAAAA,OAFK;AAGLE,MAAAA,SAHK;AAILE,MAAAA,KAJK;AAKLE,MAAAA,OALK;AAMLE,MAAAA,KANK;AAOLO,MAAAA,WAPK;AAQLW,MAAAA,YARK;AASLG,MAAAA,WATK;AAULG,MAAAA,UAVK;AAWLtB,MAAAA,IAXK;AAYLuB,MAAAA,YAZK;AAaLI,MAAAA;AAbK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBGxC,QAjBH,CADF;AAqBD,CA9FD,C,CA+FA;;;AACA,OAAO,MAAM0C,gBAAgB,GAAG,MAAM;AACpC,SAAOtD,UAAU,CAACS,UAAD,CAAjB;AACD,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import axios from 'axios'\nimport React, { useState, useContext, useEffect } from 'react'\n\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n}\n\nconst API_ENDPOINT = 'https://opentdb.com/api.php?'\n\nconst url = ''\nconst tempUrl =\n  'https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple'\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [waiting, setWaiting] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [questions, setQuestions] = useState([])\n  const [index, setIndex] = useState(0)\n  const [correct, setCorrect] = useState(0)\n  const [error, setError] = useState(false)\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: 'sports',\n    difficulty: 'easy',\n  })\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  const fetchQuestions = async (url) => {\n    setLoading(true)\n    setWaiting(false)\n    const response = await axios(url).catch((err) => console.log(err))\n    if (response) {\n      const data = response.data.results\n      if (data.length > 0) {\n        setQuestions(data)\n        setLoading(false)\n        setWaiting(false)\n        setError(false)\n      } else {\n        setWaiting(true)\n        setError(true)\n      }\n    } else {\n      setWaiting(true)\n    }\n  }\n\n  const nextQuestion = () => {\n    setIndex((oldIndex) => {\n      const index = oldIndex + 1\n      if (index > questions.length - 1) {\n        openModal()\n        return 0\n      } else {\n        return index\n      }\n    })\n  }\n  const checkAnswer = (value) => {\n    if (value) {\n      setCorrect((oldState) => oldState + 1)\n    }\n    nextQuestion()\n  }\n\n  const openModal = () => {\n    setIsModalOpen(true)\n  }\n  const closeModal = () => {\n    setWaiting(true)\n    setCorrect(0)\n    setIsModalOpen(false)\n  }\n  const handleChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    setQuiz({ ...quiz, [name]: value })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const { amount, category, difficulty } = quiz\n\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`\n    fetchQuestions(url)\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        waiting,\n        loading,\n        questions,\n        index,\n        correct,\n        error,\n        isModalOpen,\n        nextQuestion,\n        checkAnswer,\n        closeModal,\n        quiz,\n        handleChange,\n        handleSubmit,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n"]},"metadata":{},"sourceType":"module"}