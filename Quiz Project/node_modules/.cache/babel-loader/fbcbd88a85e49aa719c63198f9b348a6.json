{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Projects\\\\react-projects-master\\\\23-quiz\\\\final\\\\src\\\\App.js\";\nimport React from 'react';\nimport { useGlobalContext } from './context';\nimport SetupForm from './SetupForm';\nimport Loading from './Loading';\nimport Modal from './Modal';\n\nfunction App() {\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer\n  } = useGlobalContext();\n\n  if (waiting) {\n    return /*#__PURE__*/React.createElement(SetupForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const {\n    question,\n    incorrect_answers,\n    correct_answer\n  } = questions[index]; // const answers = [...incorrect_answers, correct_answer]\n\n  let answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n\n  if (tempIndex === 3) {\n    answers.push(correct_answer);\n  } else {\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"correct-answers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"correct answers : \", correct, \"/\", index), /*#__PURE__*/React.createElement(\"article\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    dangerouslySetInnerHTML: {\n      __html: question\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, answers.map((answer, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      className: \"answer-btn\",\n      onClick: () => checkAnswer(correct_answer === answer),\n      dangerouslySetInnerHTML: {\n        __html: answer\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"next-question\",\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"next question\")));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/React Projects/react-projects-master/23-quiz/final/src/App.js"],"names":["React","useGlobalContext","SetupForm","Loading","Modal","App","waiting","loading","questions","index","correct","nextQuestion","checkAnswer","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","__html","map","answer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,SAASC,GAAT,GAAe;AACb,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA;AAPI,MAQFX,gBAAgB,EARpB;;AASA,MAAIK,OAAJ,EAAa;AACX,wBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,MAAIC,OAAJ,EAAa;AACX,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,iBAAZ;AAA+BC,IAAAA;AAA/B,MAAkDP,SAAS,CAACC,KAAD,CAAjE,CAjBa,CAkBb;;AACA,MAAIO,OAAO,GAAG,CAAC,GAAGF,iBAAJ,CAAd;AACA,QAAMG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAlB;;AACA,MAAIH,SAAS,KAAK,CAAlB,EAAqB;AACnBD,IAAAA,OAAO,CAACK,IAAR,CAAaN,cAAb;AACD,GAFD,MAEO;AACLC,IAAAA,OAAO,CAACK,IAAR,CAAaL,OAAO,CAACC,SAAD,CAApB;AACAD,IAAAA,OAAO,CAACC,SAAD,CAAP,GAAqBF,cAArB;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqBL,OADrB,OAC+BD,KAD/B,CADF,eAIE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,uBAAuB,EAAE;AAAEa,MAAAA,MAAM,EAAET;AAAV,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,CAACO,GAAR,CAAY,CAACC,MAAD,EAASf,KAAT,KAAmB;AAC9B,wBACE;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,OAAO,EAAE,MAAMG,WAAW,CAACG,cAAc,KAAKS,MAApB,CAH5B;AAIE,MAAA,uBAAuB,EAAE;AAAEF,QAAAA,MAAM,EAAEE;AAAV,OAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATA,CADH,CAFF,CAJF,eAmBE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAEb,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnBF,CAFF,CADF;AA4BD;;AAED,eAAeN,GAAf","sourcesContent":["import React from 'react'\nimport { useGlobalContext } from './context'\n\nimport SetupForm from './SetupForm'\nimport Loading from './Loading'\nimport Modal from './Modal'\nfunction App() {\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer,\n  } = useGlobalContext()\n  if (waiting) {\n    return <SetupForm />\n  }\n  if (loading) {\n    return <Loading />\n  }\n\n  const { question, incorrect_answers, correct_answer } = questions[index]\n  // const answers = [...incorrect_answers, correct_answer]\n  let answers = [...incorrect_answers]\n  const tempIndex = Math.floor(Math.random() * 4)\n  if (tempIndex === 3) {\n    answers.push(correct_answer)\n  } else {\n    answers.push(answers[tempIndex])\n    answers[tempIndex] = correct_answer\n  }\n  return (\n    <main>\n      <Modal />\n      <section className='quiz'>\n        <p className='correct-answers'>\n          correct answers : {correct}/{index}\n        </p>\n        <article className='container'>\n          <h2 dangerouslySetInnerHTML={{ __html: question }} />\n          <div className='btn-container'>\n            {answers.map((answer, index) => {\n              return (\n                <button\n                  key={index}\n                  className='answer-btn'\n                  onClick={() => checkAnswer(correct_answer === answer)}\n                  dangerouslySetInnerHTML={{ __html: answer }}\n                />\n              )\n            })}\n          </div>\n        </article>\n        <button className='next-question' onClick={nextQuestion}>\n          next question\n        </button>\n      </section>\n    </main>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}